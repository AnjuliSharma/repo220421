Parameters:
  SecurityGroupDescription: 
    Description: Security Group Description (Simple Parameter)
    Type: String
  SecurityGroupPort:
    Description: Simple Description of a Number Parameter with Min Value and Max Value 
    Type: Number
    MinValue: 1150 
    MaxValue: 65535
  InstanceType: 
    Description: Webserver Ec2 instance type (has Default, AllowedValues)
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t1.micro
      - t2.micro
      - t2.nano
      - t2.small
    ConstraintDescription: must be valid ec2 instance type.
  DBPwd:
    Description: The database admin password (wont be echoed)
    Type: String
    MinLength: 8
    MaxLength: 8
    NoEcho: true
  KeyName: 
    Description: Name of an existing EC2 KeyPair to enable SSH access to EC2 instances, Linked to AWS parameter.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be an existing KeyPair.
  SecurityGroupIngressCIDR:
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  MyVPC:
    Description: MyVPC to operate in
    Type: AWS::EC2::VPC::Id
  MySubnetId:
    Description: Subnet IDs that is alist of subnet IDs
    Type: "List<AWS::EC2::Subnet::Id>"
  DbSubnetIpBlocks:
    Description: "Comma-delimited list of three CIDR blocks"
    Type: CommaDelimitedList
    Default: "10.0.48.0/24, 10.0.112.0/24, 10.0.176.0/24"

Resources:
  MyEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
     InstanceType: !Ref InstanceType
     KeyName: !Ref KeyName
     ImageId: "ami-a4c7edb2"
     SubnetId: !Ref DbSubnet1

  MySecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Ref SecurityGroupDescription
      SecurityGroupIngress:
        - CidrIp: !Ref SecurityGroupIngressCIDR
          FromPort: !Ref SecurityGroupPort
          ToPort: !Ref SecurityGroupPort
          IpProtocol: tcp
      VpcId: !Ref MyVPC

  DbSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      # the select function allows us to select across a list
      CidrBlock: !Select [0, !Ref DbSubnetIpBlocks]
  DbSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      # the select function allows us to select across a list
      CidrBlock: !Select [1, !Ref DbSubnetIpBlocks]
  DbSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      # the select function allows us to select across a list
      CidrBlock: !Select [2, !Ref DbSubnetIpBlocks]

 